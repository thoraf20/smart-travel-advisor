basePath: /
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.PasswordResetRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:2003
info:
  contact: {}
  description: Backend for smart travel planning and recommendations
  title: Smart Travel Advisor API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Auth
  /auth/password/reset:
    post:
      consumes:
      - application/json
      parameters:
      - description: Reset password info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Reset reset
      tags:
      - Auth
  /auth/password/reset/request:
    post:
      consumes:
      - application/json
      parameters:
      - description: Password reset info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Request password reset
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Auth
swagger: "2.0"
